{
 "Resources": {
  "AmazonBedrockAgentBlueprintsStackBedrockServiceRole55949A6B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Condition": {
        "StringEquals": {
         "aws:SourceAccount": {
          "Ref": "AWS::AccountId"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "bedrock.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Service role for Amazon Bedrock",
    "RoleName": "AmazonBedrockExecutionRoleForAgents_14ce7c93-5ba"
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/AmazonBedrockAgentBlueprintsStack/BedrockServiceRole/Resource"
   }
  },
  "AmazonBedrockAgentBlueprintsStackBedrockServiceRoleDefaultPolicy52DAA442": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "bedrock:InvokeModel",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:bedrock:",
          {
           "Ref": "AWS::Region"
          },
          "::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0"
         ]
        ]
       },
       "Sid": "AllowModelInvocationForOrchestration"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AmazonBedrockAgentBlueprintsStackBedrockServiceRoleDefaultPolicy52DAA442",
    "Roles": [
     {
      "Ref": "AmazonBedrockAgentBlueprintsStackBedrockServiceRole55949A6B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/AmazonBedrockAgentBlueprintsStack/BedrockServiceRole/DefaultPolicy/Resource"
   }
  },
  "AmazonBedrockAgentBlueprintsStackAgentBlueprinthrassistantagentwithROC4D531948": {
   "Type": "AWS::Bedrock::Agent",
   "Properties": {
    "ActionGroups": [
     {
      "ActionGroupName": "UserInputAction",
      "ActionGroupState": "ENABLED",
      "ParentActionGroupSignature": "AMAZON.UserInput"
     },
     {
      "ActionGroupExecutor": {
       "CustomControl": "RETURN_CONTROL"
      },
      "ActionGroupName": "VacationsActionGroup",
      "ActionGroupState": "ENABLED",
      "Description": "Actions for getting the number of available vacations days for an employee and confirm new time off",
      "FunctionSchema": {
       "Functions": [
        {
         "Description": "Get the number of vacation days available for a certain employee",
         "Name": "get_available_vacation_days",
         "Parameters": {
          "employee_id": {
           "Description": "The ID of the employee to get the available vacations",
           "Required": true,
           "Type": "integer"
          }
         }
        },
        {
         "Description": "Reserve vacation time for a specific employee - you need all parameters to reserve vacation time",
         "Name": "reserve_vacation_time",
         "Parameters": {
          "employee_id": {
           "Description": "The ID of the employee to reserve the vacation time for",
           "Required": true,
           "Type": "integer"
          },
          "start_date": {
           "Description": "The start date of the vacation time to reserve",
           "Required": true,
           "Type": "integer"
          },
          "end_date": {
           "Description": "The end date of the vacation time to reserve",
           "Required": true,
           "Type": "integer"
          }
         }
        }
       ]
      }
     }
    ],
    "AgentName": "hr-assistant-agent-with-ROC",
    "AgentResourceRoleArn": {
     "Fn::GetAtt": [
      "AmazonBedrockAgentBlueprintsStackBedrockServiceRole55949A6B",
      "Arn"
     ]
    },
    "FoundationModel": "anthropic.claude-3-sonnet-20240229-v1:0",
    "IdleSessionTTLInSeconds": 1200,
    "Instruction": "As an HR agent, your role involves assisting employees with a range of HR tasks. These include managing vacation requests both present and future, reviewing past vacation usage, tracking remaining vacation days, and addressing general HR inquiries. You will rely on contextual details provided by employees to fulfill their HR needs efficiently. When discussing dates, always use the YYYY-MM-DD format unless clarified otherwise by the employee. If you are unsure about any details, do not hesitate to ask the employee for clarification.Use \"you\" to address the employee directly, making it more personal and actionable.Make sure the responses are direct, straightforward, and do not contain unnecessary information.",
    "PromptOverrideConfiguration": {
     "PromptConfigurations": []
    },
    "TestAliasTags": {}
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/AmazonBedrockAgentBlueprintsStack/AgentBlueprint-hr-assistant-agent-with-ROC"
   }
  },
  "VacationAPILambdaSetupRDSDatabaseForAgentWithFDAuroraSecretForAgentWithROC6E850D80": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"clusteradmin\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/RDSDatabaseForAgentWithFD/AuroraSecretForAgentWithROC/Resource"
   }
  },
  "VacationAPILambdaSetupRDSDatabaseForAgentWithFDAuroraSecretForAgentWithROCAttachmentB67EE26B": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "VacationAPILambdaSetupRDSDatabaseForAgentWithFDAuroraSecretForAgentWithROC6E850D80"
    },
    "TargetId": {
     "Ref": "VacationAPILambdaSetupRDSDatabaseForAgentWithFDAuroraClusterForAgentWithROC9E52523D"
    },
    "TargetType": "AWS::RDS::DBCluster"
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/RDSDatabaseForAgentWithFD/AuroraSecretForAgentWithROC/Attachment/Resource"
   }
  },
  "VacationAPILambdaSetupRDSDatabaseForAgentWithFDAuroraClusterForAgentWithROC9E52523D": {
   "Type": "AWS::RDS::DBCluster",
   "Properties": {
    "CopyTagsToSnapshot": true,
    "DBClusterIdentifier": "agent-with-roc-aurora-cluster",
    "DBClusterParameterGroupName": "default.aurora-postgresql13",
    "DatabaseName": "employeedatabase",
    "EnableHttpEndpoint": true,
    "Engine": "aurora-postgresql",
    "EngineMode": "serverless",
    "EngineVersion": "13.12",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "VacationAPILambdaSetupRDSDatabaseForAgentWithFDAuroraSecretForAgentWithROC6E850D80"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "VacationAPILambdaSetupRDSDatabaseForAgentWithFDAuroraSecretForAgentWithROC6E850D80"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "StorageEncrypted": true,
    "VpcSecurityGroupIds": []
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/RDSDatabaseForAgentWithFD/AuroraClusterForAgentWithROC/Resource"
   }
  },
  "VacationAPILambdaSetupRDSDatabaseForAgentWithFDLambdaRoleToPopulateDataE7279947": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Execution Role for Lambda function",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonRDSDataFullAccess"
       ]
      ]
     }
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "secretsmanager:GetSecretValue",
         "Effect": "Allow",
         "Resource": {
          "Ref": "VacationAPILambdaSetupRDSDatabaseForAgentWithFDAuroraSecretForAgentWithROC6E850D80"
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "AllowAccessSecretManager"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/RDSDatabaseForAgentWithFD/LambdaRoleToPopulateData/Resource"
   }
  },
  "VacationAPILambdaSetupRDSDatabaseForAgentWithFDPopulateSampleDataFuncD8246A9E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-533267284022-us-east-1",
     "S3Key": "fd3fbc89cb4c8a0fd0742be9f1d45183710f2c4f2f397fee4b24da5364bbb755.zip"
    },
    "Environment": {
     "Variables": {
      "CLUSTER_ARN": {
       "Fn::Join": [
        "",
        [
         "arn:aws:rds:us-east-1:533267284022:cluster:",
         {
          "Ref": "VacationAPILambdaSetupRDSDatabaseForAgentWithFDAuroraClusterForAgentWithROC9E52523D"
         }
        ]
       ]
      },
      "SECRET_ARN": {
       "Ref": "VacationAPILambdaSetupRDSDatabaseForAgentWithFDAuroraSecretForAgentWithROCAttachmentB67EE26B"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "VacationAPILambdaSetupRDSDatabaseForAgentWithFDLambdaRoleToPopulateDataE7279947",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 300
   },
   "DependsOn": [
    "VacationAPILambdaSetupRDSDatabaseForAgentWithFDLambdaRoleToPopulateDataE7279947"
   ],
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/RDSDatabaseForAgentWithFD/PopulateSampleDataFunc/Resource",
    "aws:asset:path": "asset.fd3fbc89cb4c8a0fd0742be9f1d45183710f2c4f2f397fee4b24da5364bbb755",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "VacationAPILambdaSetupRDSDatabaseForAgentWithFDTriggerPopulateDataFunction1D5EC552": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"Lambda\",\"action\":\"InvokeCommand\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "VacationAPILambdaSetupRDSDatabaseForAgentWithFDPopulateSampleDataFuncD8246A9E"
       },
       "\",\"Payload\":\"{\\\"message\\\":\\\"Populate data in RDS\\\"}\"},\"physicalResourceId\":{\"id\":\"1722528192156\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"Lambda\",\"action\":\"InvokeCommand\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "VacationAPILambdaSetupRDSDatabaseForAgentWithFDPopulateSampleDataFuncD8246A9E"
       },
       "\",\"Payload\":\"{\\\"message\\\":\\\"Populate data in RDS\\\"}\"},\"physicalResourceId\":{\"id\":\"1722528192156\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": true
   },
   "DependsOn": [
    "VacationAPILambdaSetupRDSDatabaseForAgentWithFDTriggerPopulateDataFunctionCustomResourcePolicyBD5CDDE7"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/RDSDatabaseForAgentWithFD/TriggerPopulateDataFunction/Resource/Default"
   }
  },
  "VacationAPILambdaSetupRDSDatabaseForAgentWithFDTriggerPopulateDataFunctionCustomResourcePolicyBD5CDDE7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "VacationAPILambdaSetupRDSDatabaseForAgentWithFDPopulateSampleDataFuncD8246A9E",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "VacationAPILambdaSetupRDSDatabaseForAgentWithFDTriggerPopulateDataFunctionCustomResourcePolicyBD5CDDE7",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/RDSDatabaseForAgentWithFD/TriggerPopulateDataFunction/CustomResourcePolicy/Resource"
   }
  },
  "VacationAPILambdaSetupVacationFunctionServiceRole99715B99": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonRDSDataFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationFunction/ServiceRole/Resource"
   }
  },
  "VacationAPILambdaSetupVacationFunction59DBC89C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-533267284022-us-east-1",
     "S3Key": "045050b7846425a545f8c8c71bcd1152cf62a7031676204b2f420e3b685f8177.zip"
    },
    "Environment": {
     "Variables": {
      "CLUSTER_ARN": {
       "Fn::Join": [
        "",
        [
         "arn:aws:rds:us-east-1:533267284022:cluster:",
         {
          "Ref": "VacationAPILambdaSetupRDSDatabaseForAgentWithFDAuroraClusterForAgentWithROC9E52523D"
         }
        ]
       ]
      },
      "SECRET_ARN": {
       "Ref": "VacationAPILambdaSetupRDSDatabaseForAgentWithFDAuroraSecretForAgentWithROC6E850D80"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "VacationAPILambdaSetupVacationFunctionServiceRole99715B99",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 600
   },
   "DependsOn": [
    "VacationAPILambdaSetupVacationFunctionServiceRole99715B99"
   ],
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationFunction/Resource",
    "aws:asset:path": "asset.045050b7846425a545f8c8c71bcd1152cf62a7031676204b2f420e3b685f8177",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "VacationAPILambdaSetupAllowAccessSecretManagerPolicy88B87267": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "VacationAPILambdaSetupAllowAccessSecretManagerPolicy88B87267",
    "Roles": [
     {
      "Ref": "VacationAPILambdaSetupVacationFunctionServiceRole99715B99"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/AllowAccessSecretManagerPolicy/Resource"
   }
  },
  "VacationAPILambdaSetupVacationAPI4351C111": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "This service serves a Lambda function for managing employee vacation data.",
    "Name": "Vacation API"
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/Resource"
   }
  },
  "VacationAPILambdaSetupVacationAPIDeploymentB3B795238c390b984d29a04e80962b2b06ffe523": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "This service serves a Lambda function for managing employee vacation data.",
    "RestApiId": {
     "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
    }
   },
   "DependsOn": [
    "VacationAPILambdaSetupGetRequestModelE480BEF2",
    "VacationAPILambdaSetupPostRequestModelE0A2D2D2",
    "VacationAPILambdaSetupVacationAPIvacationGETC6DCB3DF",
    "VacationAPILambdaSetupVacationAPIvacationPOST385BA8B1",
    "VacationAPILambdaSetupVacationAPIvacationEF199E5A"
   ],
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/Deployment/Resource"
   }
  },
  "VacationAPILambdaSetupVacationAPIDeploymentStageprod7494E48A": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "VacationAPILambdaSetupVacationAPIDeploymentB3B795238c390b984d29a04e80962b2b06ffe523"
    },
    "RestApiId": {
     "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/DeploymentStage.prod/Resource"
   }
  },
  "VacationAPILambdaSetupVacationAPIvacationEF199E5A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "VacationAPILambdaSetupVacationAPI4351C111",
      "RootResourceId"
     ]
    },
    "PathPart": "vacation",
    "RestApiId": {
     "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/Default/vacation/Resource"
   }
  },
  "VacationAPILambdaSetupVacationAPIvacationPOSTApiPermissionAgentWithROCStackVacationAPILambdaSetupVacationAPI51B654D2POSTvacationD1B30297": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "VacationAPILambdaSetupVacationFunction59DBC89C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:533267284022:",
       {
        "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
       },
       "/",
       {
        "Ref": "VacationAPILambdaSetupVacationAPIDeploymentStageprod7494E48A"
       },
       "/POST/vacation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/Default/vacation/POST/ApiPermission.AgentWithROCStackVacationAPILambdaSetupVacationAPI51B654D2.POST..vacation"
   }
  },
  "VacationAPILambdaSetupVacationAPIvacationPOSTApiPermissionTestAgentWithROCStackVacationAPILambdaSetupVacationAPI51B654D2POSTvacationA2298AF9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "VacationAPILambdaSetupVacationFunction59DBC89C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:533267284022:",
       {
        "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
       },
       "/test-invoke-stage/POST/vacation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/Default/vacation/POST/ApiPermission.Test.AgentWithROCStackVacationAPILambdaSetupVacationAPI51B654D2.POST..vacation"
   }
  },
  "VacationAPILambdaSetupVacationAPIvacationPOST385BA8B1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "VacationAPILambdaSetupVacationFunction59DBC89C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "RequestModels": {
     "application/json": {
      "Ref": "VacationAPILambdaSetupPostRequestModelE0A2D2D2"
     }
    },
    "ResourceId": {
     "Ref": "VacationAPILambdaSetupVacationAPIvacationEF199E5A"
    },
    "RestApiId": {
     "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/Default/vacation/POST/Resource"
   }
  },
  "VacationAPILambdaSetupVacationAPIvacationGETApiPermissionAgentWithROCStackVacationAPILambdaSetupVacationAPI51B654D2GETvacation0537F131": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "VacationAPILambdaSetupVacationFunction59DBC89C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:533267284022:",
       {
        "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
       },
       "/",
       {
        "Ref": "VacationAPILambdaSetupVacationAPIDeploymentStageprod7494E48A"
       },
       "/GET/vacation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/Default/vacation/GET/ApiPermission.AgentWithROCStackVacationAPILambdaSetupVacationAPI51B654D2.GET..vacation"
   }
  },
  "VacationAPILambdaSetupVacationAPIvacationGETApiPermissionTestAgentWithROCStackVacationAPILambdaSetupVacationAPI51B654D2GETvacation4908D54E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "VacationAPILambdaSetupVacationFunction59DBC89C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:533267284022:",
       {
        "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
       },
       "/test-invoke-stage/GET/vacation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/Default/vacation/GET/ApiPermission.Test.AgentWithROCStackVacationAPILambdaSetupVacationAPI51B654D2.GET..vacation"
   }
  },
  "VacationAPILambdaSetupVacationAPIvacationGETC6DCB3DF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "VacationAPILambdaSetupVacationFunction59DBC89C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "RequestModels": {
     "application/json": {
      "Ref": "VacationAPILambdaSetupGetRequestModelE480BEF2"
     }
    },
    "ResourceId": {
     "Ref": "VacationAPILambdaSetupVacationAPIvacationEF199E5A"
    },
    "RestApiId": {
     "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/Default/vacation/GET/Resource"
   }
  },
  "VacationAPILambdaSetupVacationAPIVacationApiKey4F85AB6D": {
   "Type": "AWS::ApiGateway::ApiKey",
   "Properties": {
    "Enabled": true,
    "StageKeys": [
     {
      "RestApiId": {
       "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
      },
      "StageName": {
       "Ref": "VacationAPILambdaSetupVacationAPIDeploymentStageprod7494E48A"
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/VacationApiKey/Resource"
   }
  },
  "VacationAPILambdaSetupVacationAPIVacationUsagePlan5D045C7F": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
      },
      "Stage": {
       "Ref": "VacationAPILambdaSetupVacationAPIDeploymentStageprod7494E48A"
      },
      "Throttle": {
       "/vacation/POST": {
        "BurstLimit": 2,
        "RateLimit": 10
       },
       "/vacation/GET": {
        "BurstLimit": 2,
        "RateLimit": 10
       }
      }
     }
    ],
    "Quota": {
     "Limit": 10000,
     "Period": "MONTH"
    },
    "Throttle": {
     "BurstLimit": 2,
     "RateLimit": 10
    },
    "UsagePlanName": "Easy"
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/VacationUsagePlan/Resource"
   }
  },
  "VacationAPILambdaSetupVacationAPIVacationUsagePlanUsagePlanKeyResourceAgentWithROCStackVacationAPILambdaSetupVacationAPIVacationApiKey37193292DD783B0A": {
   "Type": "AWS::ApiGateway::UsagePlanKey",
   "Properties": {
    "KeyId": {
     "Ref": "VacationAPILambdaSetupVacationAPIVacationApiKey4F85AB6D"
    },
    "KeyType": "API_KEY",
    "UsagePlanId": {
     "Ref": "VacationAPILambdaSetupVacationAPIVacationUsagePlan5D045C7F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/VacationAPI/VacationUsagePlan/UsagePlanKeyResource:AgentWithROCStackVacationAPILambdaSetupVacationAPIVacationApiKey37193292"
   }
  },
  "VacationAPILambdaSetupPostRequestModelE0A2D2D2": {
   "Type": "AWS::ApiGateway::Model",
   "Properties": {
    "ContentType": "application/json",
    "RestApiId": {
     "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
    },
    "Schema": {
     "$schema": "http://json-schema.org/draft-04/schema#",
     "type": "object",
     "properties": {
      "func": {
       "type": "string"
      },
      "parameters": {
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "name": {
          "type": "string"
         },
         "value": {
          "type": "string"
         }
        },
        "required": [
         "name",
         "value"
        ]
       }
      }
     },
     "required": [
      "func",
      "parameters"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/PostRequestModel/Resource"
   }
  },
  "VacationAPILambdaSetupGetRequestModelE480BEF2": {
   "Type": "AWS::ApiGateway::Model",
   "Properties": {
    "ContentType": "application/json",
    "RestApiId": {
     "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
    },
    "Schema": {
     "$schema": "http://json-schema.org/draft-04/schema#",
     "type": "object",
     "properties": {
      "func": {
       "type": "string"
      },
      "parameters": {
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "name": {
          "type": "string"
         },
         "value": {
          "type": "string"
         }
        },
        "required": [
         "name",
         "value"
        ]
       }
      }
     },
     "required": [
      "func",
      "parameters"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/VacationAPILambdaSetup/GetRequestModel/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-533267284022-us-east-1",
     "S3Key": "97f30e67419a1676a2215492723e5add1aa491caf0cbe2dd878fc4fab0468cd4.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.97f30e67419a1676a2215492723e5add1aa491caf0cbe2dd878fc4fab0468cd4",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21S227CMAz9lr2HjDHtAwpoLxMbottz5aZeCU2bKk5BqOq/z0nLRWhPPsdx7JPjLOTL21zOn+BEM1VUM6Nz2aceVCU4lfUaatnvrEGx+m1i3Fqj1TnQEQ0ix8JZVUlOJSU2XriCZL8GDzkQpqgcepGiO6IzSLQyHXl0ocN6OZFBUCyjGhoo0cmeT683Q/gGV6JPPEvb12HIteDxZBAG6ryArLEFHkh+xvDeNcpr2wh6zYCIR8kkBOZy2akK/ZLFTlfj+OuNVDelQW9vmfB4dLUmCuySHgS0ugSPJzizaUg+aXX0bYJrbI09X9TfMTa8jA6PgOtt5xRGRRcyNRrxBv3eFiE1IW7/gXErE/oh7rQ1EMX+T0LZhs0xsU8Aw3AbF90Jevj1QvGWbJ256ZC9O9Eq5m7yHuidWsZfnW87Xk3YiTzQ83Ex55/HH+9AWs9c13hdo9yN8Q/O8MbllQIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "AgentWithROCStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "VacationAPILambdaSetupVacationAPIEndpointD9281157": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "VacationAPILambdaSetupVacationAPIDeploymentStageprod7494E48A"
      },
      "/"
     ]
    ]
   }
  },
  "VacationAPILambdaSetupAPIEndpoint0F7AAC61": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "VacationAPILambdaSetupVacationAPI4351C111"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "VacationAPILambdaSetupVacationAPIDeploymentStageprod7494E48A"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}